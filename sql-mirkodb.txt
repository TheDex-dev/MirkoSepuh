-- --- Membuat Tabel ---

CREATE TABLE public.patient (
    patientid SERIAL PRIMARY KEY,
    mrn character varying(20) NOT NULL UNIQUE,
    fullname character varying(100) NOT NULL,
    dateofbirth date,
    gender character varying(10),
    guarantor character varying(100),
    phonenumber character varying(20),
    createdat timestamp with time zone[],
    updatedat timestamp with time zone[],
    createduserid character varying(100)[] NOT NULL
);

CREATE TABLE public.registration (
    registrationid SERIAL PRIMARY KEY,
    patientid integer NOT NULL,
    registrationnumber character varying(30) NOT NULL UNIQUE,
    registrationdate timestamp without time zone NOT NULL,
    patientclass character varying(50),
    attendingdoctor character varying(100),
    createdat timestamp with time zone[],
    updatedat timestamp with time zone[],
    createduserid character varying(100)[] NOT NULL
);

CREATE TABLE public.allergy (
    allergyid SERIAL PRIMARY KEY,
    patientid integer NOT NULL,
    allergyname character varying(255) NOT NULL,
    recordeddate date DEFAULT CURRENT_DATE,
    createdat timestamp with time zone[],
    updatedat timestamp with time zone[],
    createduserid character varying(100)[] NOT NULL
);

CREATE TABLE public.patientbilling (
    billingid SERIAL PRIMARY KEY,
    registrationid integer NOT NULL UNIQUE,
    plafond numeric(15,2) DEFAULT 0,
    totalbilling numeric(15,2) DEFAULT 0,
    difference numeric(15,2) DEFAULT 0,
    lastupdated timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createdat timestamp with time zone[],
    updatedat timestamp with time zone[],
    createduserid character varying(100)[] NOT NULL
);

CREATE TABLE public.diagnosis (
    diagnosisid SERIAL PRIMARY KEY,
    registrationid integer NOT NULL,
    diagnosistype character varying(50),
    diagnosiscode character varying(20),
    description text NOT NULL,
    createdat timestamp with time zone[],
    updatedat timestamp with time zone[],
    createduserid character varying(100)[] NOT NULL
);

CREATE TABLE public.vitalsign (
    vitalid SERIAL PRIMARY KEY,
    registrationid integer NOT NULL,
    measurementname character varying(50) NOT NULL,
    measurementvalue character varying(50) NOT NULL,
    measurementtime timestamp without time zone NOT NULL,
    createdat timestamp with time zone[],
    updatedat timestamp with time zone[],
    createduserid character varying(100)[] NOT NULL
);

CREATE TABLE public.radiologyorder (
    orderid SERIAL PRIMARY KEY,
    registrationid integer NOT NULL,
    orderdate timestamp without time zone NOT NULL,
    procedurename character varying(255) NOT NULL,
    requestingdoctor character varying(100),
    status character varying(50) DEFAULT 'Ordered'::character varying,
    resultsummary text,
    createdat timestamp with time zone[],
    updatedat timestamp with time zone[],
    createduserid character varying(100)[] NOT NULL
);

CREATE TABLE public.labolatorium (
    orderid SERIAL PRIMARY KEY,
    registrationid integer NOT NULL,
    orderdate timestamp without time zone NOT NULL,
    procedurename character varying(255) NOT NULL,
    requestingdoctor character varying(100),
    status character varying(50) DEFAULT 'Ordered'::character varying,
    resultsummary text,
    examname character varying(50),
    unit character varying(50),
    result_comment character varying(50),
    ressult_note character varying(50),
    createdat timestamp with time zone[],
    updatedat timestamp with time zone[],
    cretaeduserid character varying(100)[] NOT NULL
);

CREATE TABLE public.joborder (
    joborderid SERIAL PRIMARY KEY,
    registration integer NOT NULL,
    ordertype character varying(100),
    requestingdoctor character varying(100),
    orderdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    status character varying(50),
    notes text,
    createdat timestamp with time zone,
    updatedat time without time zone[],
    creteduserid character varying(100)[] NOT NULL
);

CREATE TABLE public.joborderdetail (
    joborderdetailid SERIAL PRIMARY KEY,
    joborderid integer NOT NULL,
    servicecode character varying(50),
    servicename character varying(255) NOT NULL,
    quantity integer DEFAULT 1,
    price numeric(15,2) DEFAULT 0,
    resultvalue text,
    status character varying(50),
    createdat timestamp with time zone[],
    updatedat timestamp with time zone[],
    createduserid character varying(100)[] NOT NULL
);


-- --- Menghubungkan Tabel (Foreign Keys) ---
-- (Memastikan semua tabel ada sebelum dihubungkan)

ALTER TABLE ONLY public.registration
    ADD CONSTRAINT fk_patient FOREIGN KEY (patientid) REFERENCES public.patient(patientid) ON DELETE CASCADE;

ALTER TABLE ONLY public.allergy
    ADD CONSTRAINT fk_patient FOREIGN KEY (patientid) REFERENCES public.patient(patientid) ON DELETE CASCADE;

ALTER TABLE ONLY public.patientbilling
    ADD CONSTRAINT fk_registration FOREIGN KEY (registrationid) REFERENCES public.registration(registrationid) ON DELETE CASCADE;

ALTER TABLE ONLY public.diagnosis
    ADD CONSTRAINT fk_registration FOREIGN KEY (registrationid) REFERENCES public.registration(registrationid) ON DELETE CASCADE;

ALTER TABLE ONLY public.vitalsign
    ADD CONSTRAINT fk_registration FOREIGN KEY (registrationid) REFERENCES public.registration(registrationid) ON DELETE CASCADE;

ALTER TABLE ONLY public.radiologyorder
    ADD CONSTRAINT fk_registration FOREIGN KEY (registrationid) REFERENCES public.registration(registrationid) ON DELETE CASCADE;

ALTER TABLE ONLY public.labolatorium
    ADD CONSTRAINT fk_registration FOREIGN KEY (registrationid) REFERENCES public.registration(registrationid) ON DELETE CASCADE;

ALTER TABLE ONLY public.joborderdetail
    ADD CONSTRAINT fk_joborder FOREIGN KEY (joborderid) REFERENCES public.joborder(joborderid) ON DELETE CASCADE;